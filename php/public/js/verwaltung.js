function change_chevron($panel_id,$glyph){	var $child = $($glyph).children("span");		//span des geklickten Panels soll nicht verändert werden und wird deswegen in variable gespeichert	var $parent = $($panel_id).attr('data-parent'); //die collapse id wird mithilfe des bootstrap data-parent Attributes ausgelesen und so für mehrere Collapse einzeln möglich	if($( $panel_id ).hasClass( "collapsed" )){		$($child).removeClass( "glyphicon glyphicon-chevron-left" ).addClass( "glyphicon glyphicon-chevron-down" ); //angeklickte zu pfeil nach unten ändern		$($parent).find(".collapse_chevron").children("span").not($child).removeClass( "glyphicon glyphicon-chevron-down" ).addClass( "glyphicon glyphicon-chevron-left" ); //alle anderen zu pfeil links ändern	}else{		$($child).removeClass( "glyphicon glyphicon-chevron-down" ).addClass( "glyphicon glyphicon-chevron-left" );	}}function selectFiller(ID, clickedSelect, nextSelectId){	var str_selectedOption = document.getElementById(clickedSelect).value;//der ausgewählte Wert		/*Alle Select Elemente in Variablen setzen*/	var str_sparteElement = document.getElementById('str_sparte'+ID);	var str_statusElement = document.getElementById('str_status'+ID);	var str_turnierElement = document.getElementById('str_tu_name'+ID);	var str_heimElement = document.getElementById('str_heim'+ID);	var str_auswaertsElement = document.getElementById('str_auswaerts'+ID);			if(str_selectedOption != '0'){		/*Abhängig wo geklickt wird, werden die anderen Selects gesperrt und zurückgesetzt*/		if (clickedSelect == 'str_sparte'+ID){			$(str_statusElement).empty();			$(str_statusElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_turnierElement.disabled = true;			$(str_turnierElement).empty();			$(str_turnierElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_heimElement.disabled = true;			$(str_heimElement).empty();			$(str_heimElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_auswaertsElement.disabled = true;			$(str_auswaertsElement).empty();			$(str_auswaertsElement).append('<option value="0" selected disabled>Bitte wählen</option>');		}else if(clickedSelect == 'str_status'+ID){			$(str_turnierElement).empty();			$(str_turnierElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_heimElement.disabled = true;			$(str_heimElement).empty();			$(str_heimElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_auswaertsElement.disabled = true;			$(str_auswaertsElement).empty();			$(str_auswaertsElement).append('<option value="0" selected disabled>Bitte wählen</option>');		}else if(clickedSelect == 'str_tu_name'+ID){			$(str_heimElement).empty();			$(str_heimElement).append('<option value="0" selected disabled>Bitte wählen</option>');			str_auswaertsElement.disabled = true;			$(str_auswaertsElement).empty();			$(str_auswaertsElement).append('<option value="0" selected disabled>Bitte wählen</option>');		}else if(clickedSelect == 'str_heim'+ID){			$(str_auswaertsElement).empty();			$(str_auswaertsElement).append('<option value="0" selected disabled>Bitte wählen</option>');		}		document.getElementById(nextSelectId).disabled = false;		$.post("get_select_options/", {"int_index": ID, "str_selectedOption": str_selectedOption, "nextSelectId": nextSelectId, "str_sparteValue": str_sparteElement.value, "str_statusValue": str_statusElement.value, "str_turnierValue": str_turnierElement.value, "str_heimValue": str_heimElement.value, "str_auswaertsValue": str_auswaertsElement.value})			.done(function( data ) {//Rückgabewert der erfolgten function ist ein unformatierter json-Array				var returnedData = JSON.parse('{ "data" : ['+data+']}'); //Rückgabewert richtig formatieren				// $('#'+nextSelectId).empty();	//Select bereinigen				// $('#'+nextSelectId).append('<option value="0" selected disabled>Bitte wählen</option>');	//Select mit defaultwert befüllen				/*Select mit Datenbankwerten befüllen:*/				for (var i = 0; i < returnedData.data.length; i++){					var setoption = returnedData.data[i].value;					$('#'+nextSelectId).append('<option>'+setoption+'</option>');				};			});	}		else{document.getElementById(nextSelectId).disabled = true;}}//$.post("get_select_options", {"json_values": json_values}) // function selectOption($select,$option){		// // //$(this).$($element).selected = "true";	// // //document.getElementById($element).selected = "true";	 // // $('option').mousedown(function(e) {				// // // // $(this).selected = "true";       // // $(this).prop('selected', !$(this).prop('selected'));	 // // return false;	  // // });    					// // <script>																		// // $('option').mousedown(function(e) {										// // e.preventDefault();										// // $(this).prop('selected', !$(this).prop('selected'));										// // return false; 									// // });								// // </script>  // optionen=document.getElementById($select).options;  // for(i=0;i<optionen.length;i++)  // {    // if(optionen[i].value==$option)	// {		// optionen[i].selected;		// //optionen[i].prop("selected", "selected");		// //optionen[i].prop('selected', !$(this).prop('selected'));	  // //optionen[i].setAttribute('selected','selected');	  // //alert(optionen[i].value+'='+optionen[i].firstChild.nodeValue);	// }  // }  // }